{"version":3,"sources":["vertices.js","shaders/borders.frag","shaders/borders.vert","shaders/texture.frag","shaders/texture.vert","main.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["compute_borders","buffer","count","Uint32Array","indices","coords","Float32Array","length","vertices","v","i","len","a","j","b","push","module","exports","regl","getBorders","fetch","borderData","then","response","arrayBuffer","getTexture","filename","Promise","resolve","image","Image","src","crossOrigin","onload","texture","data","flipY","longitude_offset","prop","createLineDrawer","frag","bordersFrag","vert","bordersVert","uniforms","aspectRatio","blend","enable","func","dst","depth","attributes","position","primitive","main","borders","landTexture","monoTexture","all","specImg","monoImg","drawBorders","drawTexture","textureFrag","textureVert","frame","time","catch","console","error","viewportWidth","viewportHeight","ar","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["export function compute_borders(buffer) {\n  // First uint32 (4 bytes) contain the number of line strings.\n  const count = new Uint32Array(buffer, 0, 1)[0];\n  // Each of the next `count` uint32s stores the vertex count of a line string.\n  const indices = new Uint32Array(buffer, 4, count);\n  // Rest of bytes contain vertex coordinates (alternating long-lat pairs)\n  const coords = new Float32Array(buffer, 4 * (indices.length + 1));\n\n  const vertices = [];\n  let v = 0;\n\n  for (let i = 0; i < indices.length; i += 1) {\n    const len = indices[i];\n\n    let a = [coords[v++], coords[v++]];\n\n    for (let j = 1; j < len; j += 1) {\n      const b = [coords[v++], coords[v++]];\n\n      vertices.push(...a, ...b);\n\n      a = b;\n    }\n  }\n\n  return new Float32Array(vertices);\n}\n","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nvarying float v_depth;\\n\\nvoid main() {\\n  // Discard when depth is negative, whether interpolated or not.\\n  if (v_depth < 0.) {\\n    discard;\\n  }\\n\\n  gl_FragColor = vec4(vec3(230. / 255.), 1.);\\n}\\n\";","module.exports=\"#define PI 3.1415926538\\n\\nvec3 project(vec2 point, float longitude_offset) {\\n  point *= PI / 180.;\\n  float lon = point[0];\\n  float lat = point[1];\\n\\n  float azimuth = lon - longitude_offset;\\n  float inclination = PI / 2. - lat;\\n\\n  float depth = sin(inclination) * cos(azimuth);\\n  float x = sin(inclination) * sin(azimuth);\\n  float y = cos(inclination);\\n\\n  return vec3(x, y, depth);\\n}\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec2 aspectRatio;\\nuniform float longitude_offset;\\n\\nattribute vec2 position;\\n\\nvarying float v_depth;\\n\\nvoid main() {\\n  vec3 projected_position = project(position, longitude_offset);\\n\\n  v_depth = projected_position.z;\\n\\n  gl_Position = vec4(projected_position.xy / aspectRatio, 0, 1);\\n}\\n\";","module.exports=\"#define PI 3.1415926538\\n\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D landTexture;\\nuniform sampler2D monoTexture;\\n\\nuniform float longitude_offset;\\n\\nvec3 light_reversed = vec3(-0.5, 0.5, 0.3);\\nfloat light_mag = length(light_reversed);\\n\\nvarying vec2 v_position;\\n\\nvoid main() {\\n\\n  // The screen is the tangent plane. Each (x, y) we treat as an\\n  // orthographically projected point of the front-facing hemisphere.\\n  // The textures are equirectangular projections, which means the position of\\n  // an image pixel is just the longitude-latitude.\\n  // For each fragment, then, we must figure out the corresponding lat-long to\\n  // retrieve the correct image pixel.\\n\\n  // 1. Define the projected coordinates.\\n  //    Discard fragments outside the great circle.\\n\\n  float x = v_position.x;\\n  float y = v_position.y;\\n  float c = x * x + y * y; // Distance from center of orthographic projection\\n\\n  if (sqrt(c) > 1.) {\\n    discard;\\n  }\\n\\n  // 2. Invert projection to get spherical coordinates\\n\\n  float depth = sqrt(1. - c); // Purposefully ignoring negative face\\n  float longitude = atan(x / depth) + longitude_offset; // [-PI / 2, PI / 2]\\n  float latitude = asin(y);                             // [-PI / 2, PI / 2]\\n\\n  // 3. Do equirectangular projection to get plane/texture coordinates\\n  //    For longitude: Map to [0.25, 0.75] (center is 0.5, range is 0.5)\\n  //    For latitude: Map to [0, 1] (center is 0.5, range is 0.5)\\n\\n  float texture_x = (longitude + PI) / (2. * PI);\\n  float texture_y = (latitude + PI / 2.) / PI;\\n\\n  // 4. Grab texture colors. Black = land, white = no land.\\n\\n  vec2 texture_position = vec2(mod(texture_x, 1.0), texture_y);\\n  vec3 texture_color = texture2D(landTexture, texture_position).rgb;\\n  vec3 mono_color = texture2D(monoTexture, texture_position).rgb;\\n\\n  texture_color += mono_color;\\n\\n  // 5. Calculate lighting.\\n\\n  float dotted = dot(vec3(x, y, depth), light_reversed) / light_mag;\\n  float light = sign(dotted) * pow(abs(dotted), 1.7);\\n  light = 0.6 + light * 0.37;\\n\\n  // gl_FragColor = vec4(texture_color, 1.);\\n  gl_FragColor = vec4(texture_color, 1.);\\n  gl_FragColor.rgb *= light;\\n}\\n\";","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform vec2 aspectRatio;\\n\\nattribute vec2 position;\\n\\nvarying vec2 v_position;\\n\\nvoid main() {\\n  // For some reason textures only cover the first quadrant of the clip space.\\n  // Remember that v_position should become the coordinate of the texture in\\n  // clip space. Cutting position in half means that (1, 1) in the clip space\\n  // becomes (0.5, 0.5) on the texture.\\n  // two quadrants' worth of space.\\n  // Adding 0.5 to position means that (1, 1) in the clip space becomes (1, 1)\\n  // on the texture, and similarly (0, 0) -> (0.5, 0.5) (the texture's center)\\n  // and (-1, -1) -> (0, 0).\\n\\n  // v_position = 0.5 + position * 0.5;\\n  v_position = position * aspectRatio;\\n\\n  // gl_Position should be position because the position attribute covers the\\n  // whole clip space\\n  gl_Position = vec4(position, 0, 1);\\n}\\n\";","import createREGL from 'regl';\nimport { compute_borders } from './vertices';\n\nimport bordersFrag from './shaders/borders.frag';\nimport bordersVert from './shaders/borders.vert';\nimport textureFrag from './shaders/texture.frag';\nimport textureVert from './shaders/texture.vert';\n\nimport specImg from './specularity@2x.png';\nimport monoImg from './mono@2x.png';\n\nimport borderData from './borders.dat';\n\nconst regl = createREGL();\n\nasync function getBorders() {\n  return fetch(`./${borderData}`)\n    .then(response => response.arrayBuffer())\n    .then(buffer => compute_borders(buffer));\n}\n\nasync function getTexture(filename) {\n  return new Promise(resolve => {\n    const image = new Image();\n    image.src = filename; // `${base}/textures/${filename}`;\n    image.crossOrigin = '';\n    image.onload = () => resolve(regl.texture({ data: image, flipY: true }));\n  });\n}\n\nconst longitude_offset = regl.prop('longitude_offset');\n\nfunction createLineDrawer(vertices) {\n  return regl({\n    frag: bordersFrag,\n    vert: bordersVert,\n\n    uniforms: {\n      aspectRatio,\n      longitude_offset,\n    },\n\n    blend: {\n      enable: true,\n      func: {\n        src: 'src alpha',\n        dst: 'one minus src alpha',\n      },\n    },\n    depth: { enable: false },\n    attributes: { position: vertices },\n\n    count: vertices.length / 2,\n    primitive: 'lines',\n  });\n}\n\nasync function main() {\n  const [\n    borders,\n    landTexture,\n    monoTexture,\n  ] = await Promise.all([\n    getBorders(),\n    getTexture(specImg),\n    getTexture(monoImg),\n  ]);\n\n  const drawBorders = createLineDrawer(borders);\n\n  const drawTexture = regl({\n    frag: textureFrag,\n    vert: textureVert,\n\n    uniforms: {\n      landTexture,\n      monoTexture,\n      aspectRatio,\n      longitude_offset,\n    },\n\n    attributes: {\n      // Two triangles that cover the whole clip space\n      position: regl.buffer([\n        [-1, 1],\n        [1, -1],\n        [1, 1],\n        [-1, 1],\n        [1, -1],\n        [-1, -1],\n      ]),\n    },\n\n    count: 6,\n  });\n\n  regl.frame(({ time }) => {\n    const longitude_offset = time / 10;\n\n    drawTexture({ longitude_offset });\n    drawBorders({ longitude_offset });\n  });\n}\n\nmain().catch(console.error);\n\nfunction aspectRatio({ viewportWidth, viewportHeight }) {\n  const ar = viewportWidth / viewportHeight;\n  return ar > 1 ? [ar, 1] : [1, 1 / ar];\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}